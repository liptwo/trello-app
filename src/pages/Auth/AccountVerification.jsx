import React, { useEffect, useState } from 'react'
import { Navigate, useSearchParams } from 'react-router-dom'
import { verifyUserApi } from '~/apis'
import PageLoadingSpinner from '~/components/Loading/PageLoadingSpinner'

const AccountVerification = () => {
  // l·∫•y gi√° tr·ªã email v√† token t·ª´ URL
  let [searchParams] = useSearchParams()
  // console.log('üöÄ ~ AccountVerification.jsx:7 ~ AccountVerification ~ params:', searchParams)
  // const email = searchParams.get('email')
  // const token = searchParams.get('token')
  const { email, token } = Object.fromEntries([...searchParams])
  // console.log(email, token)
  // T·∫°o bi·∫øn state ƒë·ªÉ bi·∫øt ƒë√£ verify t√†i kho·∫£n hay ch∆∞a
  const [verified, setVerified] = useState(false)

  // G·ªçi api ƒë·ªÉ verify t√†i kho·∫£n
  useEffect(() => {
    if ( email && token ) { verifyUserApi({ email, token }).then(() => setVerified(true)) }
  }, [email, token])
  // N·∫øu url c√≥ v·∫•n ƒë·ªÅ, kh√¥ng t·ªìn t·∫°i 1 trong 2 gi√° tr·ªã email ho·∫∑c token th√¨ ƒë√° ra trang 404 lu√¥n
  if ( !email || !token ) return <Navigate to='/404' />
  // N·∫øu chua verify xong th√¨ hien loading
  if ( !verified ) return <PageLoadingSpinner caption='Verifying account ...' />
  // Cu·ªëi c√πng n·∫øu kh√¥ng g·∫∑p v·∫•n ƒë·ªÅ g√¨ + v·ªõi verify th√†nh c√¥ng th√¨ ƒëi·ªÅu h∆∞·ªõng v·ªÅ trang login c√πng gi√° tr·ªã

  // verifiedEmail

  return <Navigate to={`/login?verifiedEmail=${email}`}/>
}

export default AccountVerification
